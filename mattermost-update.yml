###########################################
# Playbook to upgrade a mattermost server #
###########################################
---
- hosts: mm_servers
  become: no
  become_method: sudo
  vars_prompt:
    - name: version
      prompt: What mattermost version should I download?
      private: no
  vars_files:
    - vars/mattermost-update-vars.yml
  vars:
    - backup_archive: "mattermost-backup-{{ansible_date_time.iso8601}}.tar.gz"

  tasks:
    - name: Delete temporary folder
      ansible.builtin.file:
        path: "{{ tmp_path }}"
        state: absent

    - name: Create temporary folder
      ansible.builtin.file:
        path: "{{ tmp_path }}"
        state: directory

    - name: Download new version
      get_url:
        url: "https://releases.mattermost.com/{{ version }}/mattermost-{{ version }}-linux-amd64.tar.gz"
        dest: "{{ tmp_path }}"

    - name: Extract download to temp folder
      ansible.builtin.unarchive:
        src: "{{ tmp_path }}/mattermost-{{ version }}-linux-amd64.tar.gz"
        dest: "{{ tmp_path }}"
        extra_opts: 
        - --transform
        - 's,^[^/]\+,\0-upgrade,'
        remote_src: yes

    - name: Stop the server
      ansible.builtin.service:
        name: mattermost
        state: stopped
      become: yes

    - name: Backup existing installation as tar.gz
      community.general.archive:
        path: "{{ install_path }}/mattermost"
        dest: "{{ backup_path }}/{{ backup_archive}}"
        format: gz
      become: yes

    - name: Copy backup to control node
      ansible.builtin.fetch:
        src: "{{ backup_path }}/{{ backup_archive }}"
        dest: "{{ cntrl_backup_path }}"
      when: do_cntrl_backup

    - name: Prune installation files
      ansible.builtin.shell:
        chdir: "{{ install_path }}"
        cmd: sudo find mattermost/ mattermost/client/ -mindepth 1 -maxdepth 1 \! \( -type d \( -path mattermost/client -o -path mattermost/client/plugins -o -path mattermost/config -o -path mattermost/logs -o -path mattermost/plugins -o -path mattermost/data \) -prune \) | sort | sudo xargs rm -r

    - name: Copy new files into installation directory
      ansible.builtin.shell: 
        chdir: "{{ install_path }}"
        cmd: sudo cp -an {{ tmp_path }}/mattermost-upgrade/. mattermost/

    - name: Change ownership of files
      ansible.builtin.file:
        path: "{{ install_path }}/mattermost"
        state: directory
        recurse: yes
        owner: mattermost
        group: mattermost
      become: yes

    - name: Start the mattermost server
      ansible.builtin.service:
        name: mattermost
        state: started
      become: yes