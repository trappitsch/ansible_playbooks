##################################################
# Reto's RPi setup playbook                      #
# - run as:                                      #
#   `ansible-playbook setup_rpi.yml -l NAME -kK` #
# - localhost must have passlib for python       #
##################################################

# What it does:
# - First asks for the connection and become password, then for the rest (options -kK)
# - Creates a new user as defined in vars file with sudo privleges and ssh key
# - Creates a new user `admin` with a password
# - Disables password login for root
# - Requires sudo password always
# - Installs packages
# - Deny the `pi` user (if exists) from ever login in via ssh
# - Sets up UFW
# - Resizes the SD card
#
# It is recommended that you upgrade the computer as well!

---
- hosts: rpi
  vars_prompt:

    - name: uname
      prompt: What is your username?
      private: false

    - name: admin_password 
      prompt: "Enter the password you would like to use for the admin user"
      private: true
      confirm: yes
      
  # become: true
  remote_user: "{{ uname }}"
  become: true
  become_method: sudo
  vars_files:
    - vars/lab-ubuntu-setup.yml

  tasks:
# Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

# User and ssh key setup for {{ create_user }}
    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        password: "*"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key }}"

# disable root from logging in
    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

# Admin user and password setup for IT
    - name: Setup a user and password for IT admin
      user:
        name: admin
        password: "{{ admin_password | password_hash('sha512') }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

# Install Packages
    - name: Update apt
      apt: update_cache=yes

    - name: Install required system packages
      apt: name={{ sys_packages }} state=latest


# Additional SSH configurations to make it more secure
    - name: Deny user pi from signing in via ssh (legacy)
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: 'DenyUsers pi'
        line: DenyUsers pi


# UFW Setup
    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming

# Resize partition
    - name: Resize the SD card
      command:  sudo raspi-config nonint do_expand_rootfs

    - name: Stop and Start ssh
      service:
        name: ssh
        state: restarted

# Require sudo password always
    - name: Require sudo password always
      lineinfile:
        path: /etc/sudoers.d/010_pi-nopasswd
        state: present
        regexp: '{{ uname }} ALL=(ALL) NOPASSWD: ALL'
        line: '{{ uname }} ALL=(ALL) PASSWD: ALL'

# print a message
    - name: Reboot now
      debug:
        msg: 
          - "RESTART MANUALLY NOW!"
